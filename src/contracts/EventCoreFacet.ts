export const EVENT_CORE_FACET_ABI = [
  {
    type: "constructor",
    inputs: [
      {
        name: "trustedForwarder",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "addTicketTier",
    inputs: [
      { name: "_name", type: "string", internalType: "string" },
      { name: "_price", type: "uint256", internalType: "uint256" },
      { name: "_available", type: "uint256", internalType: "uint256" },
      {
        name: "_maxPerPurchase",
        type: "uint256",
        internalType: "uint256",
      },
      { name: "_description", type: "string", internalType: "string" },
      { name: "_benefits", type: "string", internalType: "string" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "cancelEvent",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "clearAllTiers",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getAllAttendees",
    inputs: [],
    outputs: [
      {
        name: "attendees",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getAllTierImageHashes",
    inputs: [],
    outputs: [{ name: "", type: "string[]", internalType: "string[]" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getAttendeeStats",
    inputs: [],
    outputs: [
      {
        name: "totalAttendees",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "totalTokensMinted",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getAttendeeTokens",
    inputs: [{ name: "attendee", type: "address", internalType: "address" }],
    outputs: [
      { name: "tokenIds", type: "uint256[]", internalType: "uint256[]" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getEventAnalytics",
    inputs: [],
    outputs: [
      {
        name: "totalTicketsSold",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "totalRevenue",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "uniqueAttendees",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "tierSalesCount",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getEventInfo",
    inputs: [],
    outputs: [
      { name: "name", type: "string", internalType: "string" },
      { name: "description", type: "string", internalType: "string" },
      { name: "date", type: "uint256", internalType: "uint256" },
      { name: "venue", type: "string", internalType: "string" },
      { name: "category", type: "string", internalType: "string" },
      { name: "organizer", type: "address", internalType: "address" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getEventStatus",
    inputs: [],
    outputs: [
      { name: "cancelled", type: "bool", internalType: "bool" },
      { name: "completed", type: "bool", internalType: "bool" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getIPFSMetadata",
    inputs: [],
    outputs: [{ name: "", type: "string", internalType: "string" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getResaleRules",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct Structs.ResaleRules",
        components: [
          { name: "allowResell", type: "bool", internalType: "bool" },
          {
            name: "maxMarkupPercentage",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "organizerFeePercentage",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "restrictResellTiming",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "minDaysBeforeEvent",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "requireVerification",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getTicketNFT",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getTicketTier",
    inputs: [{ name: "tierId", type: "uint256", internalType: "uint256" }],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct Structs.TicketTier",
        components: [
          { name: "name", type: "string", internalType: "string" },
          { name: "price", type: "uint256", internalType: "uint256" },
          {
            name: "available",
            type: "uint256",
            internalType: "uint256",
          },
          { name: "sold", type: "uint256", internalType: "uint256" },
          {
            name: "maxPerPurchase",
            type: "uint256",
            internalType: "uint256",
          },
          { name: "active", type: "bool", internalType: "bool" },
          {
            name: "description",
            type: "string",
            internalType: "string",
          },
          { name: "benefits", type: "string", internalType: "string" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getTierCount",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getTierImageCount",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getTierImageHash",
    inputs: [{ name: "tierIndex", type: "uint256", internalType: "uint256" }],
    outputs: [{ name: "", type: "string", internalType: "string" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      { name: "_organizer", type: "address", internalType: "address" },
      { name: "_name", type: "string", internalType: "string" },
      { name: "_description", type: "string", internalType: "string" },
      { name: "_date", type: "uint256", internalType: "uint256" },
      { name: "_venue", type: "string", internalType: "string" },
      { name: "_ipfsMetadata", type: "string", internalType: "string" },
      { name: "_category", type: "string", internalType: "string" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "isEventAttendee",
    inputs: [{ name: "attendee", type: "address", internalType: "address" }],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isTrustedForwarder",
    inputs: [{ name: "forwarder", type: "address", internalType: "address" }],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "markEventCompleted",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setEventId",
    inputs: [{ name: "_eventId", type: "uint256", internalType: "uint256" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setResaleRules",
    inputs: [
      {
        name: "_maxMarkupPercentage",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_organizerFeePercentage",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_restrictResellTiming",
        type: "bool",
        internalType: "bool",
      },
      {
        name: "_minDaysBeforeEvent",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setTicketNFT",
    inputs: [
      { name: "_ticketNFT", type: "address", internalType: "address" },
      { name: "_idrxToken", type: "address", internalType: "address" },
      {
        name: "_platformFeeReceiver",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setTierImageHash",
    inputs: [
      { name: "tierIndex", type: "uint256", internalType: "uint256" },
      { name: "imageHash", type: "string", internalType: "string" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setTierImages",
    inputs: [
      {
        name: "tierImageHashes",
        type: "string[]",
        internalType: "string[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "trustedForwarder",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "updateTicketTier",
    inputs: [
      { name: "_tierId", type: "uint256", internalType: "uint256" },
      { name: "_name", type: "string", internalType: "string" },
      { name: "_price", type: "uint256", internalType: "uint256" },
      { name: "_available", type: "uint256", internalType: "uint256" },
      {
        name: "_maxPerPurchase",
        type: "uint256",
        internalType: "uint256",
      },
      { name: "_description", type: "string", internalType: "string" },
      { name: "_benefits", type: "string", internalType: "string" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "EventCancelled",
    inputs: [],
    anonymous: false,
  },
  {
    type: "event",
    name: "EventCompleted",
    inputs: [],
    anonymous: false,
  },
  {
    type: "event",
    name: "EventIdSet",
    inputs: [
      {
        name: "eventId",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "EventInitialized",
    inputs: [
      {
        name: "organizer",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "name",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "date",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ResaleRulesUpdated",
    inputs: [
      {
        name: "maxMarkupPercentage",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "organizerFeePercentage",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "TicketNFTSet",
    inputs: [
      {
        name: "ticketNFT",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "idrxToken",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "platformFeeReceiver",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "TicketTierAdded",
    inputs: [
      {
        name: "tierId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "name",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "price",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "TicketTierUpdated",
    inputs: [
      {
        name: "tierId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "name",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "price",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "available",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "TierImageUpdated",
    inputs: [
      {
        name: "tierIndex",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "imageHash",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "TierImagesUpdated",
    inputs: [
      {
        name: "tierImageCount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "TiersCleared",
    inputs: [],
    anonymous: false,
  },
  { type: "error", name: "AvailableLessThanSold", inputs: [] },
  { type: "error", name: "AvailableTicketsNotPositive", inputs: [] },
  { type: "error", name: "EventAlreadyCancelled", inputs: [] },
  { type: "error", name: "EventIsCancelled", inputs: [] },
  { type: "error", name: "EventNotStarted", inputs: [] },
  { type: "error", name: "InvalidMaxPerPurchase", inputs: [] },
  { type: "error", name: "MaxMarkupExceeded", inputs: [] },
  { type: "error", name: "OnlyFactoryCanCall", inputs: [] },
  { type: "error", name: "OnlyOrganizerCanCall", inputs: [] },
  { type: "error", name: "OrganizerFeeExceeded", inputs: [] },
  { type: "error", name: "PriceNotPositive", inputs: [] },
  { type: "error", name: "ReentrancyGuardReentrantCall", inputs: [] },
  { type: "error", name: "TicketNFTAlreadySet", inputs: [] },
  { type: "error", name: "TierDoesNotExist", inputs: [] },
];
